%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./images/Distribuicao dos Dados-SOM4K.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Wed May 02 07:30:31 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 283 213
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
630 420 M
63 0 V
3749 0 R
-63 0 V
546 420 M
gsave 0 setgray
(-20) Rshow
grestore
1.000 UL
LTb
630 756 M
63 0 V
3749 0 R
-63 0 V
546 756 M
gsave 0 setgray
(-15) Rshow
grestore
1.000 UL
LTb
630 1092 M
63 0 V
3749 0 R
-63 0 V
-3833 0 R
gsave 0 setgray
(-10) Rshow
grestore
1.000 UL
LTb
630 1428 M
63 0 V
3749 0 R
-63 0 V
-3833 0 R
gsave 0 setgray
(-5) Rshow
grestore
1.000 UL
LTb
630 1764 M
63 0 V
3749 0 R
-63 0 V
-3833 0 R
gsave 0 setgray
( 0) Rshow
grestore
1.000 UL
LTb
630 2100 M
63 0 V
3749 0 R
-63 0 V
-3833 0 R
gsave 0 setgray
( 5) Rshow
grestore
1.000 UL
LTb
630 2436 M
63 0 V
3749 0 R
-63 0 V
-3833 0 R
gsave 0 setgray
( 10) Rshow
grestore
1.000 UL
LTb
630 2772 M
63 0 V
3749 0 R
-63 0 V
-3833 0 R
gsave 0 setgray
( 15) Rshow
grestore
1.000 UL
LTb
630 3108 M
63 0 V
3749 0 R
-63 0 V
-3833 0 R
gsave 0 setgray
( 20) Rshow
grestore
1.000 UL
LTb
630 420 M
0 63 V
0 2625 R
0 -63 V
630 280 M
gsave 0 setgray
(-20) Cshow
grestore
1.000 UL
LTb
1175 420 M
0 63 V
0 2625 R
0 -63 V
0 -2765 R
gsave 0 setgray
(-15) Cshow
grestore
1.000 UL
LTb
1719 420 M
0 63 V
0 2625 R
0 -63 V
0 -2765 R
gsave 0 setgray
(-10) Cshow
grestore
1.000 UL
LTb
2264 420 M
0 63 V
0 2625 R
0 -63 V
0 -2765 R
gsave 0 setgray
(-5) Cshow
grestore
1.000 UL
LTb
2808 420 M
0 63 V
0 2625 R
0 -63 V
0 -2765 R
gsave 0 setgray
( 0) Cshow
grestore
1.000 UL
LTb
3353 420 M
0 63 V
0 2625 R
0 -63 V
0 -2765 R
gsave 0 setgray
( 5) Cshow
grestore
1.000 UL
LTb
3897 420 M
0 63 V
0 2625 R
0 -63 V
0 -2765 R
gsave 0 setgray
( 10) Cshow
grestore
1.000 UL
LTb
4442 420 M
0 63 V
0 2625 R
0 -63 V
0 -2765 R
gsave 0 setgray
( 15) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
630 420 M
3812 0 V
0 2688 V
-3812 0 V
630 420 L
LTb
/Times-Roman findfont 140 scalefont setfont
140 1764 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(ATRIBUTO 1) Cshow
grestore
grestore
/Helvetica findfont 140 scalefont setfont
LTb
/Times-Roman findfont 140 scalefont setfont
2536 70 M
gsave 0 setgray
(ATRIBUTO 2) Cshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UP
LTb
1.000 UL
LTb
2951 2345 M
0 700 V
1407 0 V
0 -700 V
-1407 0 V
0 700 R
1407 0 V
2.500 UP
1.000 UL
LT0
LTb
3791 2975 M
gsave 0 setgray
(PROTOTIPOS) Rshow
grestore
LT0
1608 2498 TriUF
1756 1077 TriUF
3902 2446 TriUF
4129 1195 TriUF
4074 2975 TriUF
1.500 UP
1.000 UL
LT1
LTb
3791 2835 M
gsave 0 setgray
(CLUSTER1) Rshow
grestore
LT1
3906 1160 Circle
4006 1139 Circle
4140 1295 Circle
4304 1159 Circle
4405 1183 Circle
4074 2835 Circle
1.500 UP
1.000 UL
LT2
LTb
3791 2695 M
gsave 0 setgray
(CLUSTER2) Rshow
grestore
LT2
951 2654 Box
1204 2611 Box
1264 2932 Box
1377 2778 Box
1417 2756 Box
1464 2536 Box
1465 2531 Box
1487 2486 Box
1511 2570 Box
1581 2535 Box
1677 2170 Box
1686 2524 Box
1688 2395 Box
1702 2436 Box
1726 2537 Box
1871 2247 Box
1942 2274 Box
2045 2368 Box
2466 2119 Box
4074 2695 Box
1.500 UP
1.000 UL
LT3
LTb
3791 2555 M
gsave 0 setgray
(CLUSTER3) Rshow
grestore
LT3
1019 1272 Crs
1072 1196 Crs
1156 1304 Crs
1187 958 Crs
1248 950 Crs
1263 1010 Crs
1272 1206 Crs
1302 734 Crs
1386 1108 Crs
1404 1075 Crs
1459 947 Crs
1474 1422 Crs
1500 1040 Crs
1523 1120 Crs
1534 962 Crs
1560 884 Crs
1591 1155 Crs
1599 825 Crs
1680 957 Crs
1682 1344 Crs
1717 1077 Crs
1751 928 Crs
1755 1427 Crs
1766 967 Crs
1788 1002 Crs
1790 1257 Crs
1807 1118 Crs
1818 1195 Crs
1836 1166 Crs
1887 936 Crs
1895 867 Crs
1906 940 Crs
1910 972 Crs
1913 882 Crs
1928 1096 Crs
1931 1010 Crs
1932 911 Crs
1932 1009 Crs
1946 1073 Crs
1970 1033 Crs
1975 772 Crs
2018 1496 Crs
2047 897 Crs
2056 1215 Crs
2058 1543 Crs
2085 843 Crs
2309 871 Crs
2409 1059 Crs
2482 1246 Crs
2498 1659 Crs
2535 963 Crs
4074 2555 Crs
1.500 UP
1.000 UL
LT4
LTb
3791 2415 M
gsave 0 setgray
(CLUSTER4) Rshow
grestore
LT4
3658 2512 Pls
3681 2493 Pls
3721 2532 Pls
3744 2436 Pls
3745 2432 Pls
3759 2470 Pls
3772 2364 Pls
3788 2451 Pls
3788 2370 Pls
3789 2346 Pls
3804 2495 Pls
3814 2533 Pls
3822 2446 Pls
3827 2459 Pls
3834 2514 Pls
3834 2374 Pls
3838 2493 Pls
3844 2415 Pls
3847 2539 Pls
3861 2437 Pls
3876 2403 Pls
3886 2560 Pls
3889 2398 Pls
3892 2495 Pls
3899 2513 Pls
3901 2441 Pls
3910 2441 Pls
3930 2403 Pls
3933 2520 Pls
3934 2342 Pls
3940 2407 Pls
3940 2455 Pls
3946 2417 Pls
3951 2509 Pls
3960 2499 Pls
3961 2314 Pls
3976 2426 Pls
4012 2557 Pls
4021 2482 Pls
4023 2425 Pls
4029 2486 Pls
4029 2471 Pls
4032 2314 Pls
4034 2295 Pls
4045 2521 Pls
4051 2473 Pls
4053 2380 Pls
4070 2383 Pls
4071 2438 Pls
4141 2400 Pls
4074 2415 Pls
1.000 UL
LTb
630 420 M
3812 0 V
0 2688 V
-3812 0 V
630 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman Helvetica
