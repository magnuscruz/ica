%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./images/DistribuicaodosDados-RPCL4K.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon May 07 16:30:43 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 266 201
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
630 420 M
63 0 V
3389 0 R
-63 0 V
546 420 M
gsave 0 setgray
(-20) Rshow
grestore
1.000 UL
LTb
630 724 M
63 0 V
3389 0 R
-63 0 V
546 724 M
gsave 0 setgray
(-15) Rshow
grestore
1.000 UL
LTb
630 1029 M
63 0 V
3389 0 R
-63 0 V
-3473 0 R
gsave 0 setgray
(-10) Rshow
grestore
1.000 UL
LTb
630 1333 M
63 0 V
3389 0 R
-63 0 V
-3473 0 R
gsave 0 setgray
(-5) Rshow
grestore
1.000 UL
LTb
630 1638 M
63 0 V
3389 0 R
-63 0 V
-3473 0 R
gsave 0 setgray
( 0) Rshow
grestore
1.000 UL
LTb
630 1942 M
63 0 V
3389 0 R
-63 0 V
-3473 0 R
gsave 0 setgray
( 5) Rshow
grestore
1.000 UL
LTb
630 2247 M
63 0 V
3389 0 R
-63 0 V
-3473 0 R
gsave 0 setgray
( 10) Rshow
grestore
1.000 UL
LTb
630 2551 M
63 0 V
3389 0 R
-63 0 V
-3473 0 R
gsave 0 setgray
( 15) Rshow
grestore
1.000 UL
LTb
630 2856 M
63 0 V
3389 0 R
-63 0 V
-3473 0 R
gsave 0 setgray
( 20) Rshow
grestore
1.000 UL
LTb
630 420 M
0 63 V
0 2373 R
0 -63 V
630 280 M
gsave 0 setgray
(-20) Cshow
grestore
1.000 UL
LTb
1123 420 M
0 63 V
0 2373 R
0 -63 V
0 -2513 R
gsave 0 setgray
(-15) Cshow
grestore
1.000 UL
LTb
1616 420 M
0 63 V
0 2373 R
0 -63 V
0 -2513 R
gsave 0 setgray
(-10) Cshow
grestore
1.000 UL
LTb
2109 420 M
0 63 V
0 2373 R
0 -63 V
0 -2513 R
gsave 0 setgray
(-5) Cshow
grestore
1.000 UL
LTb
2603 420 M
0 63 V
0 2373 R
0 -63 V
0 -2513 R
gsave 0 setgray
( 0) Cshow
grestore
1.000 UL
LTb
3096 420 M
0 63 V
0 2373 R
0 -63 V
0 -2513 R
gsave 0 setgray
( 5) Cshow
grestore
1.000 UL
LTb
3589 420 M
0 63 V
0 2373 R
0 -63 V
0 -2513 R
gsave 0 setgray
( 10) Cshow
grestore
1.000 UL
LTb
4082 420 M
0 63 V
0 2373 R
0 -63 V
0 -2513 R
gsave 0 setgray
( 15) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
630 420 M
3452 0 V
0 2436 V
-3452 0 V
630 420 L
LTb
/Times-Roman findfont 120 scalefont setfont
140 1638 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(ATRIBUTO 1) Cshow
grestore
grestore
/Helvetica findfont 140 scalefont setfont
LTb
/Times-Roman findfont 120 scalefont setfont
2356 70 M
gsave 0 setgray
(ATRIBUTO 2) Cshow
grestore
/Helvetica findfont 140 scalefont setfont
1.000 UP
LTb
1.000 UL
LTb
2591 2093 M
0 700 V
1407 0 V
0 -700 V
-1407 0 V
0 700 R
1407 0 V
2.500 UP
1.000 UL
LT0
LTb
3431 2723 M
gsave 0 setgray
(PROTOTIPOS) Rshow
grestore
LT0
1200 2310 TriUF
1651 1015 TriUF
3741 2329 TriUF
3819 1115 TriUF
3714 2723 TriUF
1.500 UP
1.000 UL
LT1
LTb
3431 2583 M
gsave 0 setgray
(CLUSTER1) Rshow
grestore
LT1
3372 2316 Pls
3393 2298 Pls
3429 2334 Pls
3450 2247 Pls
3451 2244 Pls
3463 2278 Pls
3475 2182 Pls
3490 2260 Pls
3490 2187 Pls
3490 2166 Pls
3505 2301 Pls
3513 2335 Pls
3521 2256 Pls
3525 2268 Pls
3531 2318 Pls
3531 2191 Pls
3535 2299 Pls
3540 2228 Pls
3543 2340 Pls
3556 2248 Pls
3570 2217 Pls
3579 2359 Pls
3581 2212 Pls
3584 2301 Pls
3590 2317 Pls
3592 2251 Pls
3600 2252 Pls
3618 2217 Pls
3621 2323 Pls
3622 2162 Pls
3628 2221 Pls
3628 2264 Pls
3633 2230 Pls
3638 2313 Pls
3646 2304 Pls
3646 2137 Pls
3660 2238 Pls
3693 2357 Pls
3701 2289 Pls
3702 2237 Pls
3708 2292 Pls
3708 2279 Pls
3711 2137 Pls
3712 2119 Pls
3723 2324 Pls
3728 2280 Pls
3730 2196 Pls
3745 2199 Pls
3746 2249 Pls
3809 2214 Pls
3714 2583 Pls
1.500 UP
1.000 UL
LT2
LTb
3431 2443 M
gsave 0 setgray
(CLUSTER2) Rshow
grestore
LT2
921 2445 Box
1150 2406 Box
1204 2697 Box
1307 2557 Box
1343 2537 Box
1386 2338 Box
1386 2333 Box
1406 2293 Box
1428 2369 Box
1491 2337 Box
1578 2006 Box
1586 2327 Box
1588 2210 Box
1601 2247 Box
1623 2338 Box
1753 2076 Box
1818 2100 Box
1912 2186 Box
2293 1960 Box
3714 2443 Box
1.500 UP
1.000 UL
LT3
LTb
3431 2303 M
gsave 0 setgray
(CLUSTER3) Rshow
grestore
LT3
983 1192 Crs
1031 1123 Crs
1106 1221 Crs
1134 907 Crs
1190 900 Crs
1203 955 Crs
1212 1132 Crs
1238 705 Crs
1314 1044 Crs
1331 1013 Crs
1381 897 Crs
1395 1328 Crs
1418 982 Crs
1439 1055 Crs
1448 912 Crs
1473 841 Crs
1500 1086 Crs
1508 787 Crs
1581 907 Crs
1582 1257 Crs
1614 1016 Crs
1645 881 Crs
1649 1332 Crs
1659 916 Crs
1679 947 Crs
1680 1178 Crs
1696 1053 Crs
1706 1122 Crs
1722 1096 Crs
1768 888 Crs
1776 825 Crs
1786 891 Crs
1789 920 Crs
1792 839 Crs
1805 1033 Crs
1808 955 Crs
1809 865 Crs
1809 954 Crs
1822 1012 Crs
1844 976 Crs
1848 739 Crs
1887 1395 Crs
1914 852 Crs
1922 1140 Crs
1924 1438 Crs
1948 803 Crs
2150 829 Crs
2241 999 Crs
2307 1168 Crs
2322 1543 Crs
2355 912 Crs
3714 2303 Crs
1.500 UP
1.000 UL
LT4
LTb
3431 2163 M
gsave 0 setgray
(CLUSTER4) Rshow
grestore
LT4
3596 1091 Circle
3687 1071 Circle
3808 1213 Circle
3957 1090 Circle
4048 1112 Circle
3714 2163 Circle
1.000 UL
LTb
630 420 M
3452 0 V
0 2436 V
-3452 0 V
630 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman Helvetica
